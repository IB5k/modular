{
 ;; Components declared here are the external reusable building blocks
 ;; of modules.
 :components
 [{:component :modular.http-kit/webserver
   :library-dependencies [[juxt.modular/http-kit "0.5.3"]]
   :constructor modular.http-kit/new-webserver
   :options [:port]
   :using [:request-handler]}

  {:component :modular.bidi/router
   :library-dependencies [[juxt.modular/bidi "0.7.3"]]
   :constructor modular.bidi/new-router}

  {:component :modular.bidi/static-resource-service
   :library-dependencies [[juxt.modular/bidi "0.7.3"]]
   :constructor modular.bidi/new-static-resource-service}

  ;; Project-local components
  {:component :website
   :library-dependencies [[hiccup "1.0.5"]
                          [juxt.modular/bidi "0.7.3"]]
   :constructor {{name}}.website/new-website
   :using [:template-model]}]

 ;; MODULES can define collections of instances of components. The same
 ;; component may be referenced by multiple modules, different modules
 ;; may provide different arguments. Modules are the building blocks of
 ;; templates.
 :modules
 [
  ;; lein new modular app +httpkit
  ;; lein new modular app +httpkit:80 ; because there's only one possible option in this case
  ;; lein new modular app +httpkit:port:80

  ;; lein new modular app full-featured-website
  {:module :core                ; :core is special, it's always selected

   ;; temporary, while bidi is in checkouts, to allow for (reset)
   :library-dependencies [[org.clojure/clojure "1.7.0-alpha4"]
                          [org.clojure/tools.reader "0.8.9"]
                          [prismatic/schema "0.3.3"]
                          [prismatic/plumbing "0.3.5"]
                          [juxt.modular/maker "0.5.0"]
                          [juxt.modular/wire-up "0.5.0"]]

   :files [{:template "build.boot" :target "build.boot"}
           {:template "system.clj" :target "src/{{sanitized}}/system.clj" :close-parens? true}
           {:template "main.clj" :target "src/{{sanitized}}/main.clj" :close-parens? true}
           {:file "gitignore" :target ".gitignore"}]}

  {:module :component
   :library-dependencies [[com.stuartsierra/component "0.2.2"]]}

  {:module :http-listener
   :components
   {:listener {:component :modular.http-kit/webserver
               :args [{:port [:http-server :port]} nil]}}}

  {:module :modular-bidi-router
   :components {:webrouter
                {:component :modular.bidi/router}}
   :dependencies {[:http-listener :listener] {:request-handler :webrouter}}
   :dev-refers [bidi.bidi/match-route bidi.bidi/path-for]
   :dev-snippets [{:template "dev/routes.clj"}]}

  {:module :simple-bidi-website
   :components {:website
                {:constructor {{name}}.simple-bidi-website/new-website}}
   :dependencies {[:modular-bidi-router :webrouter] [:website]}
   :files [{:template "simple_bidi_website.clj"
            :target "src/{{sanitized}}/simple_bidi_website.clj"}]}

  {:module :public-resources
   :components {:public-resources
                {:component :modular.bidi/static-resource-service
                 :args [:uri-context "" :resource-prefix "public"]}}
   :dependencies {[:modular-bidi-router :webrouter] [:public-resources]}}]

 ;; These are the templates that the user chooses as the <app-template> argument in
 ;; lein new modular <project-name> <app-template>
 :application-templates
 {"bidi-hello-world"
  {:description "A simple website that uses a bidi route"
   :modules #{:component
              :http-listener
              :modular-bidi-router
              :simple-bidi-website}}}
 }
