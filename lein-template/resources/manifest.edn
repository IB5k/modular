{
 :components
 [
  ;; lein new modular app +httpkit
  ;; lein new modular app +httpkit:80 ; because there's only one possible option in this case
  ;; lein new modular app +httpkit:port:80
  {:component :http-kit
   :dependencies [[juxt.modular/http-kit "0.5.0-SNAPSHOT"]]
   :constructor modular.http-kit/new-webserver
   :options [:port]
   :key :webserver
   }

  {:component :router
   :dependencies [#_[juxt.modular/bidi "0.5.0-SNAPSHOT"]]
   :constructor modular.bidi/new-router
   }

  {:component :cljs-builder
   :dependencies [[juxt.modular/cljs "0.4.0"]]
   :constructor modular.cljs/new-cljs-builder
   :args [:id :default :source-path "src-cljs"]
   }

  {:component :cljs-core
   :dependencies [#_[juxt.modular/cljs "0.5.0"]
                  ;; temporary while working on modular bidi
                  [thheller/shadow-build "0.5.0" :exclusions [org.clojure/clojurescript]]
                  [org.clojure/clojurescript "0.0-2202"]
                  [com.google.javascript/closure-compiler "v20131014"]
                  [org.clojure/google-closure-library "0.0-20140226-71326067"]
                  [org.clojure/google-closure-library-third-party "0.0-20140226-71326067"]

]
   :constructor modular.cljs/new-cljs-module
   :args [:name :cljs-core :mains ['cljs.core] :dependencies #{}]
   }

  ;; Project-local components
  {:component :{{name}}-website
   :dependencies [
                  [hiccup "1.0.5"]
                  [liberator "0.11.0" :exclusions [hiccup]]

                  #_[juxt.modular/bidi "0.4.0"]
                  ;; temporary while working on modular bidi
                  [bidi "1.10.3"]
                  [prismatic/schema "0.2.1"]
                  [prismatic/plumbing "0.2.2"]
                  ]
   :constructor {{name}}.website/new-website
   }
  {:component :{{name}}-template-model
   :dependencies [#_[juxt.modular/template "0.5.0"]]
   :constructor modular.template/new-template-model
   }
  {:component :{{name}}-cljs
   :dependencies [#_[juxt.modular/cljs "0.5.0"]]
   :constructor modular.cljs/new-cljs-module
   :args [:name :{{name}} :mains ['{{name}}.main] :dependencies #{:cljs-core}]
   }
  ]

 :assemblies
 [
  ;; lein new modular app full-featured-website
  {:assembly :full-featured-website
   :components #{:http-kit
                 :router
                 :cljs-builder
                 :cljs-core
                 :{{name}}-cljs
                 :{{name}}-website
                 :{{name}}-template-model}
   :dependency-map {:webserver {:ring-handler :router}
                    :router [:{{name}}-website :cljs-builder]
                    :{{name}}-website {:template-model :{{name}}-template-model}
                    :cljs-builder [:cljs-core :{{name}}-cljs]
                    :{{name}}-template-model [:cljs-builder]
                    }
   :default? true}

  {:assembly :cylon
   :components #{:user-domain}
   :dependency-map {:a :b :c :d}
   :default? false
   }]}
